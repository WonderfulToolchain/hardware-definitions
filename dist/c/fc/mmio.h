// SPDX-License-Identifier: CC0-1.0
//
// Auto-generated by hardware-definitions/generate.py on 2025-06-15 11:11
#ifndef __ASSEMBLER__
#include <stdint.h>
#endif

#ifndef FC_MMIO_H_
#define FC_MMIO_H_

/**
 * @addtogroup hardware_apu Hardware defines - APU MMIO
 * @{
 */

#define FC_APU_PULSE1_CTRL (*((volatile uint8_t*) 0x4000))
/**
 * Duty cycle: 12.5%
 */
#define FC_APU_PULSE1_CTRL_DUTY_12_5 0x00
/**
 * Duty cycle: 25%
 */
#define FC_APU_PULSE1_CTRL_DUTY_25 0x40
/**
 * Duty cycle: 50%
 */
#define FC_APU_PULSE1_CTRL_DUTY_50 0x80
/**
 * Duty cycle: 75%
 */
#define FC_APU_PULSE1_CTRL_DUTY_75 0xC0
#define FC_APU_PULSE1_CTRL_DUTY_SHIFT 6
#define FC_APU_PULSE1_CTRL_DUTY_MASK 0xC0

#define FC_APU_PULSE1_SWEEP (*((volatile uint8_t*) 0x4001))
#define FC_APU_PULSE1_SWEEP_ENABLE 0x80

#define FC_APU_PULSE1_TIMER_L (*((volatile uint8_t*) 0x4002))

#define FC_APU_PULSE1_TIMER_H (*((volatile uint8_t*) 0x4003))

#define FC_APU_PULSE2_CTRL (*((volatile uint8_t*) 0x4004))
/**
 * Duty cycle: 12.5%
 */
#define FC_APU_PULSE2_CTRL_DUTY_12_5 0x00
/**
 * Duty cycle: 25%
 */
#define FC_APU_PULSE2_CTRL_DUTY_25 0x40
/**
 * Duty cycle: 50%
 */
#define FC_APU_PULSE2_CTRL_DUTY_50 0x80
/**
 * Duty cycle: 75%
 */
#define FC_APU_PULSE2_CTRL_DUTY_75 0xC0
#define FC_APU_PULSE2_CTRL_DUTY_SHIFT 6
#define FC_APU_PULSE2_CTRL_DUTY_MASK 0xC0

#define FC_APU_PULSE2_SWEEP (*((volatile uint8_t*) 0x4005))
#define FC_APU_PULSE2_SWEEP_ENABLE 0x80

#define FC_APU_PULSE2_TIMER_L (*((volatile uint8_t*) 0x4006))

#define FC_APU_PULSE2_TIMER_H (*((volatile uint8_t*) 0x4007))

#define FC_APU_TRIANGLE_COUNTER (*((volatile uint8_t*) 0x4008))

#define FC_APU_TRIANGLE_TIMER_L (*((volatile uint8_t*) 0x400A))

#define FC_APU_TRIANGLE_TIMER_H (*((volatile uint8_t*) 0x400B))

#define FC_APU_NOISE_CTRL (*((volatile uint8_t*) 0x400C))

#define FC_APU_NOISE_MODE (*((volatile uint8_t*) 0x400E))

#define FC_APU_NOISE_LENGTH (*((volatile uint8_t*) 0x400F))

#define FC_APU_DMC_CTRL (*((volatile uint8_t*) 0x4010))
#define FC_APU_DMC_CTRL_IRQ 0x80
#define FC_APU_DMC_CTRL_LOOP 0x40

#define FC_APU_DMC_SAMPLE (*((volatile uint8_t*) 0x4011))

#define FC_APU_DMC_SRC (*((volatile uint8_t*) 0x4012))

#define FC_APU_DMC_LEN (*((volatile uint8_t*) 0x4013))

#define FC_APU_CTRL (*((volatile uint8_t*) 0x4014))
#define FC_APU_CTRL_PULSE1 0x01
#define FC_APU_CTRL_PULSE2 0x02
#define FC_APU_CTRL_TRIANGLE 0x04
#define FC_APU_CTRL_NOISE 0x08
#define FC_APU_CTRL_DMC 0x10

#define FC_APU_STATUS (*((volatile uint8_t*) 0x4015))
#define FC_APU_STATUS_PULSE1 0x01
#define FC_APU_STATUS_PULSE2 0x02
#define FC_APU_STATUS_TRIANGLE 0x04
#define FC_APU_STATUS_NOISE 0x08
#define FC_APU_STATUS_DMC 0x10
#define FC_APU_STATUS_FRAME_INT 0x40
#define FC_APU_STATUS_DMC_INT 0x80

#define FC_APU_FRAME (*((volatile uint8_t*) 0x4017))
/**
 * 4-step sequence
 */
#define FC_APU_FRAME_SEQ_4 0x00
/**
 * 5-step sequence
 */
#define FC_APU_FRAME_SEQ_5 0x80
#define FC_APU_FRAME_SEQ_SHIFT 7
#define FC_APU_FRAME_SEQ_MASK 0x80
#define FC_APU_FRAME_INT_INHIBIT 0x40

/**@}*/

/**
 * @addtogroup hardware_joy Hardware defines - Controller/expansion port MMIO
 * @{
 */

#define FC_JOY_LATCH (*((volatile uint8_t*) 0x4016))
#define FC_JOY_LATCH_OUT0 0x01
#define FC_JOY_LATCH_OUT1 0x02
#define FC_JOY_LATCH_OUT2 0x04

#define FC_JOY_PORT1 (*((volatile uint8_t*) 0x4016))

#define FC_JOY_PORT2 (*((volatile uint8_t*) 0x4017))

/**@}*/

/**
 * @addtogroup hardware_ppu Hardware defines - PPU MMIO
 * @{
 */

#define FC_PPU_CTRL (*((volatile uint8_t*) 0x2000))
/**
 * Nametable address: 0x2000
 */
#define FC_PPU_CTRL_NAMETABLE_2000 0x00
/**
 * Nametable address: 0x2400
 */
#define FC_PPU_CTRL_NAMETABLE_2400 0x01
/**
 * Nametable address: 0x2800
 */
#define FC_PPU_CTRL_NAMETABLE_2800 0x02
/**
 * Nametable address: 0x2C00
 */
#define FC_PPU_CTRL_NAMETABLE_2C00 0x03
#define FC_PPU_CTRL_NAMETABLE_SHIFT 0
#define FC_PPU_CTRL_NAMETABLE_MASK 0x03
/**
 * Increment VRAM address by 1 on PPU_DATA access
 */
#define FC_PPU_CTRL_VRAM_STEP_1 0x00
/**
 * Increment VRAM address by 32 on PPU_DATA access
 */
#define FC_PPU_CTRL_VRAM_STEP_32 0x04
#define FC_PPU_CTRL_VRAM_STEP_SHIFT 2
#define FC_PPU_CTRL_VRAM_STEP_MASK 0x04
/**
 * Sprite pattern table address: 0x0000
 */
#define FC_PPU_CTRL_SPRITE_0000 0x00
/**
 * Sprite pattern table address: 0x1000
 */
#define FC_PPU_CTRL_SPRITE_1000 0x08
#define FC_PPU_CTRL_SPRITE_SHIFT 3
#define FC_PPU_CTRL_SPRITE_MASK 0x08
/**
 * Background pattern table address: 0x0000
 */
#define FC_PPU_CTRL_BG_0000 0x00
/**
 * Background pattern table address: 0x1000
 */
#define FC_PPU_CTRL_BG_1000 0x10
#define FC_PPU_CTRL_BG_SHIFT 4
#define FC_PPU_CTRL_BG_MASK 0x10
/**
 * Sprite size: 8x8
 */
#define FC_PPU_CTRL_SPRITE_HEIGHT_8 0x00
/**
 * Sprite size: 8x16
 */
#define FC_PPU_CTRL_SPRITE_HEIGHT_16 0x20
#define FC_PPU_CTRL_SPRITE_HEIGHT_SHIFT 5
#define FC_PPU_CTRL_SPRITE_HEIGHT_MASK 0x20
#define FC_PPU_CTRL_EXT_MAIN 0x00
#define FC_PPU_CTRL_EXT_SUB 0x40
#define FC_PPU_CTRL_EXT_SHIFT 6
#define FC_PPU_CTRL_EXT_MASK 0x40
/**
 * Vertical blank non-maskable interrupt enable
 */
#define FC_PPU_CTRL_VBLANK_NMI 0x80

#define FC_PPU_MASK (*((volatile uint8_t*) 0x2001))
/**
 * Greyscale mode
 */
#define FC_PPU_MASK_GREYSCALE 0x01
/**
 * Show first 8 pixels of background layer
 */
#define FC_PPU_MASK_LEFT_BG 0x02
/**
 * Show first 8 pixels of sprite layer
 */
#define FC_PPU_MASK_LEFT_SPRITE 0x04
/**
 * Show background layer
 */
#define FC_PPU_MASK_BG 0x08
/**
 * Show sprite layer
 */
#define FC_PPU_MASK_SPRITE 0x10
/**
 * Red color component emphasis
 */
#define FC_PPU_MASK_RED 0x20
/**
 * Green color component emphasis
 */
#define FC_PPU_MASK_GREEN 0x40
/**
 * Blue color component emphasis
 */
#define FC_PPU_MASK_BLUE 0x80

#define FC_PPU_STATUS (*((volatile uint8_t*) 0x2002))
/**
 * Sprite overflow
 */
#define FC_PPU_STATUS_OVERFLOW 0x20
/**
 * Sprite 0 hit
 */
#define FC_PPU_STATUS_SPRITE_0 0x40
/**
 * Vertical blank
 */
#define FC_PPU_STATUS_VBLANK 0x80

#define FC_OAM_ADDR (*((volatile uint8_t*) 0x2003))

#define FC_OAM_DATA (*((volatile uint8_t*) 0x2004))

#define FC_PPU_SCROLL (*((volatile uint8_t*) 0x2005))

#define FC_PPU_ADDR (*((volatile uint8_t*) 0x2006))

#define FC_PPU_DATA (*((volatile uint8_t*) 0x2007))

#define FC_OAM_DMA (*((volatile uint8_t*) 0x4014))

/**@}*/

#endif /* FC_MMIO_H_ */

